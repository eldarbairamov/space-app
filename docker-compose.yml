version: "3"

services:
#  frontend:
#    container_name: frontend
#    build: ./frontend
#    command: npm run preview
#    env_file:
#      - frontend/.env
#    restart: unless-stopped
#    depends_on:
#      - api
#      - db

  api_nest:
    container_name: api_nest
    build: ./backend-nest
    command: npm run start:prod
    restart: unless-stopped
    ports:
      - "3010:3010"
    env_file:
      - backend-nest/.env
    environment:
      - MONGO_URI=mongodb://eldar:eldar010596@db:27017/space-app
    depends_on:
      - db
    volumes:
      - ./backend-nest/client:/app/client

  db:
    image: mongo:latest
    container_name: mongo_db
    command: mongod --quiet --logpath /dev/null
    restart: unless-stopped
    ports:
      - "27019:27017"
    environment:
      - MONGO_INITDB_DATABASE=space-app
      - MONGO_INITDB_ROOT_USERNAME=eldar
      - MONGO_INITDB_ROOT_PASSWORD=eldar010596
    volumes:
      - ./backend-nest/mongo_db:/data/db
#      - ./backend-express/mongo_db:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

#  api_express:
#    container_name: api_express
#    build: ./backend-express
#    command: npm run start:prod
#    restart: unless-stopped
#    ports:
#      - "3010:3010"
#    env_file:
#      - backend-express/.env
#    environment:
#      - MONGO_URI=mongodb://eldar:eldar010596@db:27017/space-app
#    depends_on:
#      - db
#    volumes:
#      - ./backend-express/client:/app/client

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/usr/share/nginx/html
